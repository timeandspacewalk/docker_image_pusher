1.青龙面板 定时脚本
https://github.com/whyour/qinglong
docker: (推荐)
# curl -sSL get.docker.com | sh
docker run -dit \
  -v $PWD/ql/data:/ql/data \
  # 冒号后面的 5700 为默认端口，如果设置了 QlPort, 需要跟 QlPort 保持一致
  -p 5700:5700 \
  # 部署路径非必须，比如 /test
  -e QlBaseUrl="/" \
  # 部署端口非必须，当使用 host 模式时，可以设置服务启动后的端口，默认 5700
  -e QlPort="5700" \
  --name qinglong \
  --hostname qinglong \
  --restart unless-stopped \
  whyour/qinglong:latest

docker-compose: (推荐)
#  curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
mkdir qinglong
wget https://raw.githubusercontent.com/whyour/qinglong/master/docker/docker-compose.yml
# 启动
docker-compose up -d
# 停止
docker-compose down
----------------------------------------------------------------------------------------------
# 配置文件:qinglong.yaml
version: '2'
services:
  web:
    # alpine 基础镜像版本
    image: whyour/qinglong:latest
    # debian-slim 基础镜像版本
    # image: whyour/qinglong:debian  
    volumes:
      - ./data:/ql/data
    ports:
      - "0.0.0.0:5700:5700"
    environment:
      # 部署路径非必须，以斜杠开头和结尾，比如 /test/
      QlBaseUrl: '/'
    restart: unless-stopped
----------------------------------------------------------------------------------------------

2.jellyfin影音管理
https://github.com/jellyfin/jellyfin
docker: (推荐)
docker run -d \
 --volume /yourjellyfinfolder/config:/config \
 --volume /yourjellyfinfolder/cache:/cache \
 --volume /yourjellyfinfolder/media:/media \
 --user 1000:1000 \
 --group-add=122 \
 --net=host \
 --restart=always \
 --device /dev/dri/renderD128:/dev/dri/renderD128 \
 --device /dev/dri/card0:/dev/dri/card0 \
 nyanmisaka/jellyfin

docker-compose: (推荐)
# 启动
docker-compose up -d
# 停止
docker-compose down
----------------------------------------------------------------------------------------------
# 配置文件:jellyfin.yaml
version: '3'
services:
  jellyfin:
    image: nyanmisaka/jellyfin:230414-amd64 # 中国特供镜像，做了很多优化，包括: 驱动、补丁、字体等等。
    container_name: jellyfin
    privileged: true
    restart: unless-stopped
    devices:
      - /dev/dri:/dev/dri # 核显直通
    extra_hosts: # 搜刮器地址Hosts解析，因为用到了SmartDNS，所以是不需要配置hosts地址解析的，对于未配置SmartDNS的朋友，就需要用到。
      - "www.themoviedb.org:18.160.41.129"
      - "api.themoviedb.org:52.85.151.28"
      - "image.tmdb.org:169.150.247.35"
    environment:
      - PUID=0
      - PGID=0
      - TZ=Asia/Shanghai
    ports:
      - 8096:8096
    volumes:
      - /SSD/Demo/jellyfin/config:/config # 配置目录
      - /SSD/Demo/jellyfin/cache:/cache # 缓存目录
      - /Moive/downloads:/media1 # 电影目录
    networks:
      - traefik_net # 走 Traefik 网络
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.jellyfin.rule=Host(`mv.rockylinux.cn`)" # 域名配置
      - "traefik.http.routers.jellyfin.entryPoints=websecure"
      - "traefik.http.routers.jellyfin.tls.certresolver=myresolver"
      - "traefik.http.routers.jellyfin.service=jellyfin"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
networks:
  traefik_net:
    external: true
----------------------------------------------------------------------------------------------

3.奥特曼(hdbjlizhe/autman)机器人
docker run -d --name autman --restart always --network=host -v /path/to/your/directory:/autMan hdbjlizhe/autman:latest
-d 表示后台运行容器。
--name autman 为容器指定一个名称。
--restart always 表示容器退出时总是尝试重启。
--network=host 表示使用宿主机的网络堆栈。
-v /path/to/your/directory:/autMan 表示将宿机上的目录挂载到容器内的 /autMan 目录，您可以根据需要更改宿机上的路径。
hdbjlizhe/autman:latest 是autMan的Docker镜像名和标签。

4.Rsync文件同步
----------------------------------------------------------------------------------------------
# 配置文件:Rsync.yaml
version: '3'
services:
  rsync-server:
    image: axiom/rsync-server
    container_name: rsync-server
    restart: always
    ports:
      - "1022:22" # 如果不使用SSH Key，可以不用配置
      - "873:873"
    volumes:
      - /SSD/Demo/rsync-server/data/:/data # 将数据持久化至本地
    environment:
      - USERNAME=xxx # 认证用户
      - PASSWORD=xxx # 认证密码
      - VOLUME=/data # 数据容器中的存储目录
      - ALLOW=xxx.xxx.xxx.xxx/32 # 允许访问 Rsync 服务器IP
EOF
----------------------------------------------------------------------------------------------

5.FileBrowser网盘管理
cat > /SSD/Demo/filebrowser/filebrowser.json << \EOF
{
  "port": 88,
  "baseURL": "",
  "address": "",
  "log": "stdout",
  "database": "/database.db",
  "root": "/srv"
}
EOF
 
# 生成数据库文件
touch /SSD/Demo/filebrowser/database.db
----------------------------------------------------------------------------------------------
# 配置文件:FileBrowser.yaml
version: "3"
services:
  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    restart: unless-stopped
    user: "0:0" # UID，GID 可以在shell执行此命令获取: id -u 和 id -g
    ports:
      - 88:88
    volumes:
      - /SSD/Demo/filebrowser/database.db:/database.db
      - /SSD/Demo/filebrowser/filebrowser.json:/.filebrowser.json
      - /SSD:/srv # 这是指定的是哪个目录做为网盘的根目录
    networks:
      - traefik_net
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_net
      - traefik.http.routers.filebrowser.rule=Host(`files.rockylinux.cn`)
      - traefik.http.routers.filebrowser.entrypoints=websecure
      - traefik.http.routers.filebrowser.tls=true
      - traefik.http.routers.filebrowser.tls.certresolver=myresolver
      - traefik.http.routers.filebrowser.service=filebrowser
      - traefik.http.services.filebrowser.loadbalancer.server.port=88
    healthcheck: # 需要增加健康检测，不然traefik反代过来报错bad gateway
      test: ["CMD", "curl", "-f", "http://localhost:88/health"]
      interval: 30s
      timeout: 20s
      retries: 3
 
networks:
  traefik_net:
    external: true
EOF
---------------------------------------------------------------------------------------------- 

6. AdGuardHome去广告神器
----------------------------------------------------------------------------------------------
# 配置文件:AdGuardHome.yaml
	version:  '3'
services: 
  adguardhome: 
    image:  adguard/adguardhome: latest
    container_name:  adguardhome
    volumes: 
      - /SSD/Demo/adguardhome/conf: /opt/adguardhome/conf
      - /SSD/Demo/adguardhome/work: /opt/adguardhome/work
    ports: 
      - 53:53/tcp # 这是需要注意，用户端使用 ADGuardHome 的 DNS 功能，ADGuardHome 上游 DNS 采用 SmartDNS。 
      - 53:53/udp
      - 3000:3000/tcp
    restart:  always
    networks: 
      - traefik_net
    labels: 
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.adguardhome.rule=Host(`adguardhome.rockylinux.cn`)"
      - "traefik.http.routers.adguardhome.entryPoints=websecure"
      - "traefik.http.routers.adguardhome.tls.certresolver=myresolver"
      - "traefik.http.routers.adguardhome.service=adguardhome"
      - "traefik.http.routers.adguardhome.middlewares=dashboard-auth@docker,SecHeaders@file"
      - "traefik.http.services.adguardhome.loadbalancer.server.port=3000"
 
networks: 
  traefik_net: 
    external:  true
EOF
----------------------------------------------------------------------------------------------

7.DDNS-Go动态DNS管理
----------------------------------------------------------------------------------------------
# 配置文件:DDNS-Go.yaml
version: "3"
services:
  ddns-go:
    image: jeessy/ddns-go
    container_name: ddns-go
    restart: always
    ports:
      - 9876:9876
    volumes:
      - /SSD/Dockerfile/ddns-go:/root
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.ddns-go.rule=Host(ddns-go.rockylinux.cn)"
      - "traefik.http.routers.ddns-go.entryPoints=websecure"
      - "traefik.http.routers.ddns-go.tls.certresolver=myresolver"
      - "traefik.http.routers.ddns-go.service=ddns-go"
      - "traefik.http.services.ddns-go.loadbalancer.server.port=9876"
networks:
  traefik_net:
    external: true
EOF
----------------------------------------------------------------------------------------------

8.Gitea 私人代码仓库
----------------------------------------------------------------------------------------------
# 配置文件:DDNS-Go.yaml
version: '3'
services:
  gitea:
    container_name: gitea
    image: gitea/gitea:latest
    privileged: true
    restart: always
    ports:
      - 30001:30001
      - 30002:22 # 这里将22端口转换成30002端口
    volumes:
      - /SSD/Demo/gitea/gitea-data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=Asia/Shanghai
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.gitea.rule=Host(git.rockylinux.cn)"
      - "traefik.http.routers.gitea.entryPoints=websecure"
      - "traefik.http.routers.gitea.tls.certresolver=myresolver"
      - "traefik.http.routers.gitea.service=gitea"
      - "traefik.http.services.gitea.loadbalancer.server.port=30001"
networks:
  traefik_net:
    external: true
EOF
----------------------------------------------------------------------------------------------

9.Bitwarden密码管理
----------------------------------------------------------------------------------------------
# 配置文件:Bitwarden.yaml
	version: "3"
 
services:
  bitwardenrs:
    image: vaultwarden/server:1.30.5
    container_name: bitwardenrs
    restart: unless-stopped
    environment:
      - SIGNUPS_ALLOWED=false # 开启注册，自己注册后改成false，再重启Docker服务。
      - WEBSOCKET_ENABLED=false # 禁用 WebSocket
      - WEB_VAULT_ENABLED=true # web客户端
      - DOMAIN=https://passwd.rockylinux.cn # 设置域名,需要替换成自己申请的域名
    volumes:
      - /SSD/Demo/bitwardenrs/data/:/data/
    expose:
      - 80
#      - 3012 # 3012 端口为 WebSocket 通讯端口
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.bitwardenrs.rule=Host(`passwd.rockylinux.cn`)"
      - "traefik.http.routers.bitwardenrs.entryPoints=websecure"
      - "traefik.http.routers.bitwardenrs.tls.certresolver=myresolver"
      - "traefik.http.routers.bitwardenrs.service=bitwardenrs"
      - "traefik.http.services.bitwardenrs.loadbalancer.server.port=80"
      - "traefik.http.services.bitwardenrs.loadbalancer.server.scheme=http"
      # 如果您无法理解以下相关配置，直接原样复制即可。
#      - "traefik.http.routers.bitwardenrs-http.rule=Host(`passwd.rockylinux.cn`)"
#      - "traefik.http.routers.bitwardenrs-http.entryPoints=web"
#      - "traefik.http.routers.bitwardenrs-http.service=bitwardenrs"
 
#      - "traefik.http.routers.bitwarden-websocket.rule=Host(`passwd.rockylinux.cn`) && Path(`/notifications/hub`)"
#      - "traefik.http.routers.bitwarden-websocket.entrypoints=websecure"
#      - "traefik.http.routers.bitwarden-websocket.tls.certresolver=myresolver"
#      - "traefik.http.routers.bitwarden-websocket.service=bitwarden-websocket"
#      - "traefik.http.services.bitwarden-websocket.loadbalancer.server.port=3012"
 
#      - "traefik.http.routers.bitwarden-websocket-http.rule=Host(`passwd.rockylinux.cn`) && Path(`/notifications/hub`)"
#      - "traefik.http.routers.bitwarden-websocket-http.entrypoints=web"
#      - "traefik.http.routers.bitwarden-websocket-http.service=bitwarden-websocket"
networks:
  traefik_net:
    external: true
EOF
----------------------------------------------------------------------------------------------

10.PhotoPrism照片管理
----------------------------------------------------------------------------------------------
# 配置文件:PhotoPrism.yaml
	version: '3.5'
 
services:
  photoprism:
    restart: always
    image: photoprism/photoprism:latest
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - 2342:2342 # [local port]:[container port]
    environment:
      PHOTOPRISM_ADMIN_USER: "username"
      PHOTOPRISM_ADMIN_PASSWORD: "password"          # PLEASE CHANGE: Your initial admin password (min 4 characters)
      PHOTOPRISM_HTTP_PORT: 2342                     # Built-in Web server port
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # Improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DEBUG: "false"                      # Run in debug mode (shows additional log messages)
      PHOTOPRISM_PUBLIC: "false"                     # No authentication required (disables password protection) 为了您的安全与隐私不建议开启匿名访问权限。
      PHOTOPRISM_READONLY: "false"                   # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # Enables experimental features
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # Disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # Disables Settings in Web UI
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # Disables using TensorFlow for image classification
      PHOTOPRISM_DARKTABLE_PRESETS: "false"          # Enables Darktable presets and disables concurrent RAW conversion
      PHOTOPRISM_DETECT_NSFW: "false"                # Flag photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # Allow uploads that MAY be offensive
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # Use MariaDB (or MySQL) instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB database user name
      PHOTOPRISM_DATABASE_PASSWORD: "insecure"       # MariaDB database user password
      PHOTOPRISM_SITE_URL: " https://photo.rockylinux.cn"  # Public PhotoPrism URL
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "RockyLinux之家"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: ""
    volumes:
      - "/SSD/Photo:/photoprism/originals" # 设置照片存放的位置
      - "/SSD/Demo/photoprism/storage:/photoprism/storage" # 元数据等配置存放位置
 
    networks: # 网络配置
      - traefik_net
 
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.photoprism.entrypoints=web"
      - "traefik.http.routers.photoprism.rule=Host(`photo.rockylinux.cn`)"
      - "traefik.http.middlewares.photoprism-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.photoprism.middlewares=photoprism-https-redirect"
      - "traefik.http.routers.photoprism-secure.entrypoints=websecure"
      - "traefik.http.routers.photoprism-secure.rule=Host(`photo.rockylinux.cn`)"
      - "traefik.http.routers.photoprism-secure.tls=true"
      - "traefik.http.routers.photoprism-secure.tls.certresolver=myresolver"
      - "traefik.http.services.photoprism-secure.loadbalancer.server.port=2342"
      - "traefik.port=2342"
 
  mariadb: # 数据库配置
    image: mariadb:10.5
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-loc
k-wait-timeout=50 --innodb_buffer_pool_size=512M --innodb_log_file_size=512M
    volumes:
      - "/SSD/Demo/photoprism/database:/var/lib/mysql" # 数据库存放位置
    environment:
      MYSQL_ROOT_PASSWORD: please_change
      MYSQL_DATABASE: photoprism
      MYSQL_USER: photoprism
      MYSQL_PASSWORD: insecure
    networks:
      - traefik_net
 
networks:
  traefik_net:
    external: true
----------------------------------------------------------------------------------------------

11.RustDesk全平台远程桌面
----------------------------------------------------------------------------------------------
# 配置文件:RustDesk.yaml
version: '3'  
 services:  
  hbbs:  
    container_name: hbbs  
    image: rustdesk/rustdesk-server  
    command: hbbs -r hbbs.rockylinux.cn:21116 -k _ # -k _ 强制指定必须使用公钥加密连接
    volumes:  
      - /SSD/Demo/rustdesk:/root   
    restart: unless-stopped  
    ports:  
      - 21115:21115 
      - 21116:21116  
      - 21116:21116/udp  
    networks:  
      - traefik_net  
    deploy:  
      resources:  
        limits:  
          memory: 64M  
 
  hbbr:  
    container_name: hbbr  
    image: rustdesk/rustdesk-server  
    command: hbbr -k _
    volumes:  
      - /SSD/Demo/rustdesk:/root   
    restart: unless-stopped  
    ports:  
      - 21117:21117  
    networks:  
      - traefik_net  
    deploy:  
      resources:  
        limits:  
          memory: 64M  
 
networks:  
  traefik_net:  
    external: true  
EOF
----------------------------------------------------------------------------------------------

12.TinyMediaManager影音管理
----------------------------------------------------------------------------------------------
# 配置文件:TinyMediaManager.yaml
version: '3'
services:
  tinymediamanager:
    image: dzhuang/tinymediamanager:latest # 支持中文字体
    container_name: tinyMediaManager
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Shanghai
    extra_hosts: # 搜刮器地址Hosts解析，因为用到了SmartDNS，所以不需要配置hosts地址解析，对于未配置SmartDNS的朋友，就需要用到。
      - "www.themoviedb.org:18.160.41.129"
      - "api.themoviedb.org:52.85.151.28"
      - "image.tmdb.org:169.150.247.35"
    volumes:
      - /SSD/Demo/TMM/config:/config # 配置目录
      - /Moive/downloads:/media # 电影目录
    ports:
      - 5800:5800
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.tinymediamanager.rule=Host(`tmm.rockylinux.cn`)"
      - "traefik.http.routers.tinymediamanager.entryPoints=websecure"
      - "traefik.http.routers.tinymediamanager.tls.certresolver=myresolver"
      - "traefik.http.routers.tinymediamanager.service=tinymediamanager"
      - "traefik.http.routers.tinymediamanager.middlewares=dashboard-auth@docker,SecHeaders@file"
      - "traefik.http.services.tinymediamanager.loadbalancer.server.port=5800"
networks:
  traefik_net:
    external: true
----------------------------------------------------------------------------------------------

13.qBittorrent下载管理
----------------------------------------------------------------------------------------------
# 配置文件:qBittorrent.yaml
version: '3'
services:
  qbittorrent:
    image: superng6/qbittorrentee:latest 
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Shanghai
      - WEBUIPORT=8080 # WEB 端口设置
    cpus: 1.0
    mem_limit: 1GB
    ports:
      - 8080:8080
      - 6881:6881 # 此端口需要在防火墙、路由器或者安全组规则中开启允许公网访问
      - 6881:6881/udp
    volumes:
      - /SSD/Demo/qBittorrent/config:/config  # 配置文件存放目录
      - /Moive/downloads:/downloads # 定义电影存放目录
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.qbittorrent.rule=Host(`bt.rockylinux.cn`)"
      - "traefik.http.routers.qbittorrent.entryPoints=websecure"
      - "traefik.http.routers.qbittorrent.tls.certresolver=myresolver"
      - "traefik.http.routers.qbittorrent.service=qbittorrent"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
networks:
  traefik_net:
    external: true
EOF
----------------------------------------------------------------------------------------------

14. SmartDNS智能DNS管理
----------------------------------------------------------------------------------------------
# 配置文件:SmartDNS.yaml
	version: "3"
services:
  smartdns:
    image: rockylinux/alpine-smartdns-service:v1.0
    container_name: smartdns
    restart: always
    privileged: true
#  因为我们使用 ADGuardHome DNS 解析功能做广告拦截，ADGuardHome 上游使用 SmartDNS，所以不需要放出 SmartDNS 端口，在 ADGuardHome 上配置上游  DNS  为 SmartDNS 的容器 IP 即可。
#    ports:
#      - 53:53/tcp
#      - 53:53/udp
    volumes:
      - /SSD/Dockerfile/smartdns/config.conf:/etc/smartdns/config.conf
    networks:
      - traefik_net
networks:
  traefik_net:
    external: true
EOF

----------------------------------------------------------------------------------------------


注：https://www.rockylinux.cn/
